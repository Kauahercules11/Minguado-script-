game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "TrollGui",
	Text = "Funcionou!!",
	Icon = "rbxassetid://"
})

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- =============================================
-- SISTEMA DE ESTADO PERSISTENTE
-- =============================================
local toggleStates = {
    noclipEnabled = false,
    espEnabled = false,
    spectateEnabled = false,
    allEspEnabled = false,
    loopTPEnabled = false,
    freezeModeEnabled = false,
    egorModeEnabled = false,
    clickTpEnabled = false,
    cframeFlyEnabled = false,
    auraEnabled = false
}

-- =============================================
-- VARIÁVEIS GLOBAIS
-- =============================================
local speedValue = 16
local currentTarget = nil
local trackedPlayer = nil
local tpDistanceStuds = 2
local highlights = {}
local minimizeKey = "R"

-- Variáveis para Freeze Mode e Egor Mode
local originalWalkSpeed = 16
local originalAnimations = {}
local egorSpeedMultiplier = 3.5
local humanoid = nil
local animator = nil
local walkAnimationTrack = nil
local idleAnimationTrack = nil
local walkAnimationId = "rbxassetid://3760534309"
local idleAnimationId = "rbxassetid://180435571"

-- Variáveis para Click TP e CFrame Fly
local clickTpConnection = nil
local cframeFlyConnection = nil
local originalGravity = nil

-- Variáveis para Aura
local auraEnabled = false
local auraParts = {}
local auraSound = nil
local auraLoopConnection = nil

-- =============================================
-- FUNÇÕES DA AURA
-- =============================================
local function createAura()
    if not player.Character then return end
    
    -- Criar som da aura
    if not auraSound then
        auraSound = Instance.new("Sound")
        auraSound.SoundId = "rbxassetid://88235087097886"
        auraSound.Looped = true
        auraSound.Volume = 0.7
        auraSound.Parent = player.Character:FindFirstChild("HumanoidRootPart") or player.Character:WaitForChild("Head")
        auraSound:Play()
    end
    
    -- Criar partículas verdes em volta do jogador
    local function createAuraPart()
        local part = Instance.new("Part")
        part.Name = "AuraPart"
        part.Size = Vector3.new(1, 1, 1)
        part.Material = Enum.Material.Neon
        part.BrickColor = BrickColor.new("Lime green")
        part.Anchored = true
        part.CanCollide = false
        part.Transparency = 0.3
        
        local glow = Instance.new("PointLight")
        glow.Brightness = 2
        glow.Range = 8
        glow.Color = Color3.fromRGB(0, 255, 0)
        glow.Parent = part
        
        table.insert(auraParts, part)
        return part
    end
    
    -- Criar círculo de partículas
    local radius = 5
    local numParts = 12
    
    for i = 1, numParts do
        local part = createAuraPart()
        part.Parent = workspace
    end
    
    -- Animação da aura em loop
    if auraLoopConnection then
        auraLoopConnection:Disconnect()
    end
    
    local startTime = tick()
    auraLoopConnection = RunService.Heartbeat:Connect(function()
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            return
        end
        
        local rootPos = player.Character.HumanoidRootPart.Position
        local time = tick() - startTime
        
        for i, part in ipairs(auraParts) do
            local angle = (i / #auraParts) * math.pi * 2 + time * 2
            local x = math.cos(angle) * radius
            local z = math.sin(angle) * radius
            local y = math.sin(angle + time * 3) * 1.5
            
            part.Position = rootPos + Vector3.new(x, y + 2, z)
            part.Transparency = 0.3 + math.sin(time * 4 + i) * 0.2
        end
    end)
end

local function removeAura()
    if auraSound then
        auraSound:Stop()
        auraSound:Destroy()
        auraSound = nil
    end
    
    for _, part in ipairs(auraParts) do
        part:Destroy()
    end
    auraParts = {}
    
    if auraLoopConnection then
        auraLoopConnection:Disconnect()
        auraLoopConnection = nil
    end
end

local function toggleAura()
    auraEnabled = not auraEnabled
    toggleStates.auraEnabled = auraEnabled
    
    if auraEnabled then
        createAura()
    else
        removeAura()
    end
    
    return auraEnabled
end

-- =============================================
-- FUNÇÕES EXISTENTES
-- =============================================
local function createESP(targetPlayer)
    if not targetPlayer.Character then return end
    if highlights[targetPlayer] then return end
    
    local highlight = Instance.new("Highlight")
    highlight.Adornee = targetPlayer.Character
    highlight.FillColor = Color3.fromRGB(0,255,0)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.Parent = workspace
    
    highlights[targetPlayer] = highlight
end

local function removeESP(targetPlayer)
    if highlights[targetPlayer] then
        highlights[targetPlayer]:Destroy()
        highlights[targetPlayer] = nil
    end
end

local function clearAllESP()
    for p,h in pairs(highlights) do
        h:Destroy()
    end
    highlights = {}
end

local function updatePlayerExamples()
    local exampleText = "Exemplos: "
    local players = Players:GetPlayers()
    local count = 0
    
    for _, p in ipairs(players) do
        if p ~= player then
            count = count + 1
            exampleText = exampleText .. p.Name
            if count < 3 then
                exampleText = exampleText .. ", "
            end
            if count >= 3 then
                break
            end
        end
    end
    
    return exampleText
end

local function parseCoordinates(text)
    text = text:gsub("%s+", "")
    local x, y, z = text:match("^([%d%.%-]+),([%d%.%-]+),([%d%.%-]+)$")
    if x and y and z then
        return Vector3.new(tonumber(x), tonumber(y), tonumber(z))
    end
    return nil
end

local function setupHumanoid()
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        originalWalkSpeed = humanoid.WalkSpeed
        
        animator = humanoid:FindFirstChildOfClass("Animator")
        if not animator then
            animator = Instance.new("Animator")
            animator.Parent = humanoid
        end
    end
end

local function toggleFreezeMode()
    toggleStates.freezeModeEnabled = not toggleStates.freezeModeEnabled
    
    if player.Character and humanoid then
        if toggleStates.freezeModeEnabled then
            humanoid.WalkSpeed = 0
        else
            humanoid.WalkSpeed = originalWalkSpeed
        end
    end
    
    return toggleStates.freezeModeEnabled
end

local function toggleEgorMode()
    toggleStates.egorModeEnabled = not toggleStates.egorModeEnabled
    return toggleStates.egorModeEnabled
end

local function toggleClickTp()
    toggleStates.clickTpEnabled = not toggleStates.clickTpEnabled
    
    if toggleStates.clickTpEnabled then
        clickTpConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed and input.UserInputType == Enum.UserInputType.MouseButton1 then
                local mousePos = UserInputService:GetMouseLocation()
                local ray = camera:ViewportPointToRay(mousePos.X, mousePos.Y)
                local direction = ray.Direction * 1000
                local origin = ray.Origin
                
                local params = RaycastParams.new()
                params.FilterType = Enum.RaycastFilterType.Blacklist
                if player.Character then
                    params.FilterDescendantsInstances = {player.Character}
                end
                
                local result = workspace:Raycast(origin, direction, params)
                
                if result and result.Position and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    player.Character.HumanoidRootPart.CFrame = CFrame.new(result.Position + Vector3.new(0, 3, 0))
                end
            end
        end)
    else
        if clickTpConnection then
            clickTpConnection:Disconnect()
            clickTpConnection = nil
        end
    end
    
    return toggleStates.clickTpEnabled
end

local function toggleCframeFly()
    toggleStates.cframeFlyEnabled = not toggleStates.cframeFlyEnabled
    
    if toggleStates.cframeFlyEnabled then
        local flySpeed = 50
        local flyKeys = {
            [Enum.KeyCode.W] = Vector3.new(0, 0, -1),
            [Enum.KeyCode.S] = Vector3.new(0, 0, 1),
            [Enum.KeyCode.A] = Vector3.new(-1, 0, 0),
            [Enum.KeyCode.D] = Vector3.new(1, 0, 0),
            [Enum.KeyCode.Space] = Vector3.new(0, 1, 0),
            [Enum.KeyCode.LeftShift] = Vector3.new(0, -1, 0)
        }
        
        originalGravity = workspace.Gravity
        workspace.Gravity = 0
        
        local velocity = Vector3.new()
        local lastTime = tick()
        
        cframeFlyConnection = RunService.Heartbeat:Connect(function()
            if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
                return
            end
            
            local rootPart = player.Character.HumanoidRootPart
            local currentTime = tick()
            local deltaTime = currentTime - lastTime
            lastTime = currentTime
            
            local moveDirection = Vector3.new()
            
            for key, direction in pairs(flyKeys) do
                if UserInputService:IsKeyDown(key) then
                    moveDirection = moveDirection + direction
                end
            end
            
            if moveDirection.Magnitude > 0 then
                moveDirection = moveDirection.Unit
            end
            
            local targetVelocity = moveDirection * flySpeed
            velocity = velocity:Lerp(targetVelocity, 10 * deltaTime)
            
            if velocity.Magnitude > 0.1 then
                local cameraCFrame = camera.CFrame
                local moveVector = cameraCFrame:VectorToWorldSpace(velocity * deltaTime)
                rootPart.CFrame = rootPart.CFrame + moveVector
            end
            
            rootPart.Velocity = Vector3.new()
            rootPart.AssemblyLinearVelocity = Vector3.new()
        end)
    else
        if cframeFlyConnection then
            cframeFlyConnection:Disconnect()
            cframeFlyConnection = nil
        end
        
        if originalGravity then
            workspace.Gravity = originalGravity
        end
        
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.Velocity = Vector3.new()
        end
    end
    
    return toggleStates.cframeFlyEnabled
end

-- =============================================
-- CORREÇÃO DO BUG: RESETAR ESTADOS
-- =============================================
local function resetAllToggles()
    -- Noclip
    if toggleStates.noclipEnabled then
        toggleStates.noclipEnabled = false
    end
    
    -- ESP
    if toggleStates.espEnabled or toggleStates.allEspEnabled then
        toggleStates.espEnabled = false
        toggleStates.allEspEnabled = false
        clearAllESP()
    end
    
    -- Spectate
    if toggleStates.spectateEnabled then
        toggleStates.spectateEnabled = false
        camera.CameraSubject = player.Character and player.Character:FindFirstChild("Humanoid")
    end
    
    -- Loop TP
    if toggleStates.loopTPEnabled then
        toggleStates.loopTPEnabled = false
    end
    
    -- Freeze Mode
    if toggleStates.freezeModeEnabled then
        toggleStates.freezeModeEnabled = false
        if humanoid then
            humanoid.WalkSpeed = originalWalkSpeed
        end
    end
    
    -- Egor Mode
    if toggleStates.egorModeEnabled then
        toggleStates.egorModeEnabled = false
    end
    
    -- Click TP
    if toggleStates.clickTpEnabled then
        toggleStates.clickTpEnabled = false
        if clickTpConnection then
            clickTpConnection:Disconnect()
            clickTpConnection = nil
        end
    end
    
    -- CFrame Fly
    if toggleStates.cframeFlyEnabled then
        toggleStates.cframeFlyEnabled = false
        if cframeFlyConnection then
            cframeFlyConnection:Disconnect()
            cframeFlyConnection = nil
        end
        if originalGravity then
            workspace.Gravity = originalGravity
        end
    end
    
    -- Aura
    if toggleStates.auraEnabled then
        toggleStates.auraEnabled = false
        removeAura()
    end
end

-- =============================================
-- CRIAÇÃO DA GUI COMPLETA
-- =============================================
local function createGUI()
    local PlayerGui = player:WaitForChild("PlayerGui")
    if PlayerGui:FindFirstChild("KauaDoorsGUI") then
        PlayerGui.KauaDoorsGUI:Destroy()
    end
    
    resetAllToggles()
    
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "KauaDoorsGUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = PlayerGui
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 320, 0, 690)
    MainFrame.Position = UDim2.new(0.5, -160, 0.5, -345)
    MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Visible = true
    MainFrame.Parent = ScreenGui
    
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.Position = UDim2.new(0, 0, 0, 0)
    TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TitleBar.Parent = MainFrame
    
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(0.6, 0, 1, 0)
    Title.Position = UDim2.new(0, 5, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = "TrollGui"
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Font = Enum.Font.SourceSansBold
    Title.TextSize = 18
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = TitleBar
    
    local MinimizeKeyBox = Instance.new("TextBox")
    MinimizeKeyBox.Name = "MinimizeKeyBox"
    MinimizeKeyBox.Size = UDim2.new(0.3, 0, 0.8, 0)
    MinimizeKeyBox.Position = UDim2.new(0.65, 0, 0.1, 0)
    MinimizeKeyBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    MinimizeKeyBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizeKeyBox.PlaceholderText = "Tecla"
    MinimizeKeyBox.Text = "R"
    MinimizeKeyBox.ClearTextOnFocus = false
    MinimizeKeyBox.Parent = TitleBar
    
    local PlayerDisplayFrame = Instance.new("Frame")
    PlayerDisplayFrame.Name = "PlayerDisplayFrame"
    PlayerDisplayFrame.Size = UDim2.new(0.9, 0, 0, 100)
    PlayerDisplayFrame.Position = UDim2.new(0.05, 0, 0, 40)
    PlayerDisplayFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    PlayerDisplayFrame.BorderSizePixel = 1
    PlayerDisplayFrame.BorderColor3 = Color3.fromRGB(80, 80, 80)
    PlayerDisplayFrame.Parent = MainFrame
    
    local PlayerImage = Instance.new("ImageLabel")
    PlayerImage.Name = "PlayerImage"
    PlayerImage.Size = UDim2.new(0, 60, 0, 60)
    PlayerImage.Position = UDim2.new(0.5, -30, 0.15, 0)
    PlayerImage.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    PlayerImage.BorderSizePixel = 0
    PlayerImage.Image = "rbxassetid://0"
    PlayerImage.Parent = PlayerDisplayFrame
    
    local PlayerNameLabel = Instance.new("TextLabel")
    PlayerNameLabel.Name = "PlayerNameLabel"
    PlayerNameLabel.Size = UDim2.new(0.9, 0, 0, 20)
    PlayerNameLabel.Position = UDim2.new(0.05, 0, 0.8, 0)
    PlayerNameLabel.BackgroundTransparency = 1
    PlayerNameLabel.Text = "Nenhum jogador citado"
    PlayerNameLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    PlayerNameLabel.Font = Enum.Font.SourceSans
    PlayerNameLabel.TextSize = 14
    PlayerNameLabel.TextXAlignment = Enum.TextXAlignment.Center
    PlayerNameLabel.Parent = PlayerDisplayFrame
    
    local PlayerSearchBox = Instance.new("TextBox")
    PlayerSearchBox.Name = "PlayerSearchBox"
    PlayerSearchBox.Size = UDim2.new(0.7, 0, 0, 30)
    PlayerSearchBox.Position = UDim2.new(0.05, 0, 0, 150)
    PlayerSearchBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    PlayerSearchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    PlayerSearchBox.PlaceholderText = "Digite o nome do jogador..."
    PlayerSearchBox.ClearTextOnFocus = false
    PlayerSearchBox.Parent = MainFrame
    PlayerSearchBox.Text = ""
    
    local function updatePlayerDisplay(targetPlayer)
        if targetPlayer then
            pcall(function()
                local thumbType = Enum.ThumbnailType.HeadShot
                local thumbSize = Enum.ThumbnailSize.Size420x420
                local content, isReady = Players:GetUserThumbnailAsync(targetPlayer.UserId, thumbType, thumbSize)
                if content then
                    PlayerImage.Image = content
                else
                    PlayerImage.Image = "rbxassetid://0"
                end
            end)
            PlayerNameLabel.Text = targetPlayer.Name
            PlayerNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        else
            PlayerImage.Image = "rbxassetid://0"
            PlayerNameLabel.Text = "Nenhum jogador citado"
            PlayerNameLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
        end
    end

    local function onTrackedPlayerLeaving(leftPlayer)
        if trackedPlayer and leftPlayer == trackedPlayer then
            game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "TrollGui",
                Text = "O " .. trackedPlayer.Name .. " saiu!!",
                Icon = "rbxassetid://"
            })
            trackedPlayer = nil
            updatePlayerDisplay(nil)
        end
    end
    
    Players.PlayerRemoving:Connect(onTrackedPlayerLeaving)
    
    local TrackClosestButton = Instance.new("TextButton")
    TrackClosestButton.Name = "TrackClosest"
    TrackClosestButton.Size = UDim2.new(0.25, 0, 0, 30)
    TrackClosestButton.Position = UDim2.new(0.76, 0, 0, 150)
    TrackClosestButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    TrackClosestButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TrackClosestButton.Text = "Rastrear a pessoa próxima"
    TrackClosestButton.Parent = MainFrame
    
    TrackClosestButton.MouseEnter:Connect(function()
        TrackClosestButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    end)
    
    TrackClosestButton.MouseLeave:Connect(function()
        TrackClosestButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    end)
    
    TrackClosestButton.MouseButton1Click:Connect(function()
        local closest = nil
        local shortest = math.huge
        
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local root = player.Character.HumanoidRootPart.Position
            
            for _, p in pairs(Players:GetPlayers()) do
                if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                    local dist = (root - p.Character.HumanoidRootPart.Position).Magnitude
                    if dist < shortest then
                        shortest = dist
                        closest = p
                    end
                end
            end
        end
        
        if closest then
            PlayerSearchBox.Text = closest.Name
            trackedPlayer = closest
            updatePlayerDisplay(closest)
        end
    end)
    
    local PlayerExamples = Instance.new("TextLabel")
    PlayerExamples.Name = "PlayerExamples"
    PlayerExamples.Size = UDim2.new(0.9, 0, 0, 20)
    PlayerExamples.Position = UDim2.new(0.05, 0, 0, 185)
    PlayerExamples.BackgroundTransparency = 1
    PlayerExamples.TextColor3 = Color3.fromRGB(180, 180, 180)
    PlayerExamples.Text = updatePlayerExamples()
    PlayerExamples.TextXAlignment = Enum.TextXAlignment.Left
    PlayerExamples.Font = Enum.Font.SourceSans
    PlayerExamples.TextSize = 14
    PlayerExamples.Parent = MainFrame
    
    -- BOTÕES PRINCIPAIS
    local NoclipButton = Instance.new("TextButton")
    NoclipButton.Size = UDim2.new(0.9, 0, 0, 25)
    NoclipButton.Position = UDim2.new(0.05, 0, 0, 210)
    NoclipButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    NoclipButton.TextColor3 = Color3.fromRGB(255,255,255)
    NoclipButton.Text = "Noclip: OFF"
    NoclipButton.Parent = MainFrame
    
    NoclipButton.MouseButton1Click:Connect(function()
        toggleStates.noclipEnabled = not toggleStates.noclipEnabled
        NoclipButton.Text = "Noclip: " .. (toggleStates.noclipEnabled and "ON" or "OFF")
    end)
    
    RunService.Stepped:Connect(function()
        if player.Character then
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = not toggleStates.noclipEnabled
                end
            end
        end
    end)
    
    local SpeedBox = Instance.new("TextBox")
    SpeedBox.Size = UDim2.new(0.6,0,0,25)
    SpeedBox.Position = UDim2.new(0.05,0,0,240)
    SpeedBox.BackgroundColor3 = Color3.fromRGB(60,60,60)
    SpeedBox.TextColor3 = Color3.fromRGB(255,255,255)
    SpeedBox.PlaceholderText = "Digite a velocidade"
    SpeedBox.ClearTextOnFocus = false
    SpeedBox.Parent = MainFrame
    SpeedBox.Text = "200"
    
    local SpeedButton = Instance.new("TextButton")
    SpeedButton.Size = UDim2.new(0.3,0,0,25)
    SpeedButton.Position = UDim2.new(0.7,0,0,240)
    SpeedButton.BackgroundColor3 = Color3.fromRGB(50,50,50)
    SpeedButton.TextColor3 = Color3.fromRGB(255,255,255)
    SpeedButton.Text = "Set"
    SpeedButton.Parent = MainFrame
    
    SpeedButton.MouseButton1Click:Connect(function()
        local val = tonumber(SpeedBox.Text)
        if val then
            speedValue = val
            if player.Character and player.Character:FindFirstChild("Humanoid") then
                player.Character.Humanoid.WalkSpeed = speedValue
                originalWalkSpeed = speedValue
            end
        end
    end)
    
    local TeleportSpawnButton = Instance.new("TextButton")
    TeleportSpawnButton.Size = UDim2.new(0.9,0,0,25)
    TeleportSpawnButton.Position = UDim2.new(0.05,0,0,270)
    TeleportSpawnButton.BackgroundColor3 = Color3.fromRGB(50,50,50)
    TeleportSpawnButton.TextColor3 = Color3.fromRGB(255,255,255)
    TeleportSpawnButton.Text = "Teleport to Spawn"
    TeleportSpawnButton.Parent = MainFrame
    
    TeleportSpawnButton.MouseButton1Click:Connect(function()
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(195.37,61.25,-107.25)
        end
    end)
    
    -- BOTÕES DE ESP E TELEPORTE
    local buttons = {
        {Name="ToggleSpectate", Text="Spectate Player", YPos=300},
        {Name="ToggleESP", Text="ESP Player", YPos=330},
        {Name="ToggleAllESP", Text="ESP All Players", YPos=360},
        {Name="ToggleLoopTP", Text="Loop Teleport", YPos=390},
        {Name="TeleportToPlayer", Text="Teleport to Player", YPos=420}
    }
    
    for _, btnData in pairs(buttons) do
        local btn = Instance.new("TextButton")
        btn.Name = btnData.Name
        btn.Size = UDim2.new(0.9,0,0,25)
        btn.Position = UDim2.new(0.05,0,0,btnData.YPos)
        btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        btn.Text = btnData.Text
        btn.Visible = false
        btn.Parent = MainFrame
        
        btn.MouseButton1Click:Connect(function()
            if btnData.Name=="ToggleESP" then
                if not currentTarget then return end
                toggleStates.espEnabled = not toggleStates.espEnabled
                if toggleStates.espEnabled then
                    createESP(currentTarget)
                    btn.Text="ESP: ON"
                else
                    removeESP(currentTarget)
                    btn.Text="ESP Player"
                end
            elseif btnData.Name=="ToggleAllESP" then
                toggleStates.allEspEnabled = not toggleStates.allEspEnabled
                if toggleStates.allEspEnabled then
                    for _, p in pairs(Players:GetPlayers()) do
                        if p~=player then
                            createESP(p)
                        end
                    end
                    btn.Text="ESP All: ON"
                else
                    clearAllESP()
                    btn.Text="ESP All Players"
                end
            elseif btnData.Name=="ToggleSpectate" then
                if not currentTarget then return end
                toggleStates.spectateEnabled = not toggleStates.spectateEnabled
                if toggleStates.spectateEnabled and currentTarget.Character then
                    camera.CameraSubject=currentTarget.Character:FindFirstChild("Humanoid")
                    btn.Text="Spectate: ON"
                else
                    camera.CameraSubject=player.Character:FindFirstChild("Humanoid")
                    btn.Text="Spectate Player"
                end
            elseif btnData.Name=="TeleportToPlayer" then
                if currentTarget and currentTarget.Character and player.Character then
                    local rootPart=player.Character:FindFirstChild("HumanoidRootPart")
                    local targetRoot=currentTarget.Character:FindFirstChild("HumanoidRootPart")
                    if rootPart and targetRoot then
                        rootPart.CFrame = targetRoot.CFrame * CFrame.new(0,0,tpDistanceStuds)
                    end
                end
            elseif btnData.Name=="ToggleLoopTP" then
                toggleStates.loopTPEnabled = not toggleStates.loopTPEnabled
                if toggleStates.loopTPEnabled then
                    btn.Text="Stop Loop TP"
                    RunService.Heartbeat:Connect(function()
                        if currentTarget and currentTarget.Character and player.Character then
                            local rootPart=player.Character:FindFirstChild("HumanoidRootPart")
                            local targetRoot=currentTarget.Character:FindFirstChild("HumanoidRootPart")
                            if rootPart and targetRoot then
                                rootPart.CFrame = targetRoot.CFrame * CFrame.new(0,0,tpDistanceStuds)
                            end
                        end
                    end)
                else
                    btn.Text="Loop Teleport"
                end
            end
        end)
    end
    
    -- BOTÕES ESPECIAIS
    local FreezeModeButton = Instance.new("TextButton")
    FreezeModeButton.Size = UDim2.new(0.9, 0, 0, 25)
    FreezeModeButton.Position = UDim2.new(0.05, 0, 0, 450)
    FreezeModeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    FreezeModeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    FreezeModeButton.Text = "Freeze Mode: OFF"
    FreezeModeButton.Parent = MainFrame
    
    FreezeModeButton.MouseButton1Click:Connect(function()
        local enabled = toggleFreezeMode()
        FreezeModeButton.Text = "Freeze Mode: " .. (enabled and "ON" or "OFF")
    end)
    
    local EgorModeButton = Instance.new("TextButton")
    EgorModeButton.Size = UDim2.new(0.9, 0, 0, 25)
    EgorModeButton.Position = UDim2.new(0.05, 0, 0, 480)
    EgorModeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    EgorModeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    EgorModeButton.Text = "Egor Mode: OFF"
    EgorModeButton.Parent = MainFrame
    
    EgorModeButton.MouseButton1Click:Connect(function()
        local enabled = toggleEgorMode()
        EgorModeButton.Text = "Egor Mode: " .. (enabled and "ON" or "OFF")
    end)
    
    local ClickTpButton = Instance.new("TextButton")
    ClickTpButton.Size = UDim2.new(0.9, 0, 0, 25)
    ClickTpButton.Position = UDim2.new(0.05, 0, 0, 510)
    ClickTpButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    ClickTpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ClickTpButton.Text = "Click TP: OFF"
    ClickTpButton.Parent = MainFrame
    
    ClickTpButton.MouseButton1Click:Connect(function()
        local enabled = toggleClickTp()
        ClickTpButton.Text = "Click TP: " .. (enabled and "ON" or "OFF")
    end)
    
    local CFrameFlyButton = Instance.new("TextButton")
    CFrameFlyButton.Size = UDim2.new(0.9, 0, 0, 25)
    CFrameFlyButton.Position = UDim2.new(0.05, 0, 0, 540)
    CFrameFlyButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    CFrameFlyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CFrameFlyButton.Text = "CFrame Fly: OFF"
    CFrameFlyButton.Parent = MainFrame
    
    CFrameFlyButton.MouseButton1Click:Connect(function()
        local enabled = toggleCframeFly()
        CFrameFlyButton.Text = "CFrame Fly: " .. (enabled and "ON" or "OFF")
    end)
    
    -- SISTEMA DE COORDENADAS
    local PositionTextBox = Instance.new("TextBox")
    PositionTextBox.Name = "PositionTextBox"
    PositionTextBox.Size = UDim2.new(0.9, 0, 0, 25)
    PositionTextBox.Position = UDim2.new(0.05, 0, 0, 570)
    PositionTextBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    PositionTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    PositionTextBox.PlaceholderText = "Digite as coordenadas (X,Y,Z) ou CFrame"
    PositionTextBox.ClearTextOnFocus = false
    PositionTextBox.Parent = MainFrame
    PositionTextBox.Text = "-53.57, 1023.05, -576.68"
    
    local TeleportToPositionButton = Instance.new("TextButton")
    TeleportToPositionButton.Size = UDim2.new(0.9, 0, 0, 25)
    TeleportToPositionButton.Position = UDim2.new(0.05, 0, 0, 600)
    TeleportToPositionButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    TeleportToPositionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TeleportToPositionButton.Text = "Teleportar á posição citada"
    TeleportToPositionButton.Parent = MainFrame
    
    TeleportToPositionButton.MouseButton1Click:Connect(function()
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local position = parseCoordinates(PositionTextBox.Text)
            if position then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(position)
            else
                PositionTextBox.Text = "Formato inválido! Use X,Y,Z"
            end
        end
    end)
    
    local GetCurrentPositionButton = Instance.new("TextButton")
    GetCurrentPositionButton.Size = UDim2.new(0.9, 0, 0, 25)
    GetCurrentPositionButton.Position = UDim2.new(0.05, 0, 0, 630)
    GetCurrentPositionButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    GetCurrentPositionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    GetCurrentPositionButton.Text = "Pegar posição atual"
    GetCurrentPositionButton.Parent = MainFrame
    
    GetCurrentPositionButton.MouseButton1Click:Connect(function()
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local position = player.Character.HumanoidRootPart.Position
            PositionTextBox.Text = string.format("%.2f, %.2f, %.2f", position.X, position.Y, position.Z)
        end
    end)
    
    -- >>> NOVO BOTÃO: ATIVAR AURA
    local AuraButton = Instance.new("TextButton")
    AuraButton.Size = UDim2.new(0.9, 0, 0, 25)
    AuraButton.Position = UDim2.new(0.05, 0, 0, 660)
    AuraButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    AuraButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    AuraButton.Text = "Ativar aura: OFF"
    AuraButton.Parent = MainFrame
    
    AuraButton.MouseButton1Click:Connect(function()
        local enabled = toggleAura()
        AuraButton.Text = "Ativar aura: " .. (enabled and "ON" or "OFF")
        AuraButton.BackgroundColor3 = enabled and Color3.fromRGB(0, 100, 0) or Color3.fromRGB(50, 50, 50)
    end)
    
    AuraButton.MouseEnter:Connect(function()
        if not toggleStates.auraEnabled then
            AuraButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        end
    end)
    
    AuraButton.MouseLeave:Connect(function()
        if not toggleStates.auraEnabled then
            AuraButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        end
    end)
    
    -- EVENTOS DA GUI
    PlayerSearchBox:GetPropertyChangedSignal("Text"):Connect(function()
        currentTarget = nil
        local text = string.lower(PlayerSearchBox.Text)
        if text ~= "" then
            for _, p in pairs(Players:GetPlayers()) do
                if string.lower(p.Name):find(text) == 1 or (p.DisplayName and string.lower(p.DisplayName):find(text) == 1) then
                    currentTarget = p
                    trackedPlayer = p
                    updatePlayerDisplay(p)
                    break
                end
            end
        else
            updatePlayerDisplay(nil)
        end
        
        for _, btnName in pairs({"ToggleSpectate","ToggleESP","ToggleLoopTP","TeleportToPlayer"}) do
            MainFrame[btnName].Visible = currentTarget ~= nil
        end
    end)
    
    MinimizeKeyBox:GetPropertyChangedSignal("Text"):Connect(function()
        if #MinimizeKeyBox.Text > 0 then
            local key = string.sub(MinimizeKeyBox.Text,1,1):upper()
            minimizeKey = key
            MinimizeKeyBox.Text = key
        end
    end)
    
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == Enum.KeyCode[minimizeKey] then
            MainFrame.Visible = not MainFrame.Visible
        end
    end)
    
    Players.PlayerAdded:Connect(updatePlayerExamples)
    Players.PlayerRemoving:Connect(updatePlayerExamples)
    
    -- CONFIGURAÇÃO INICIAL DO HUMANoid
    if player.Character then
        setupHumanoid()
    end
    
    player.CharacterAdded:Connect(function(character)
        wait(1)
        setupHumanoid()
        
        if toggleStates.auraEnabled then
            removeAura()
            wait(0.5)
            createAura()
        end
    end)
end

-- =============================================
-- INICIALIZAÇÃO
-- =============================================
createGUI()
