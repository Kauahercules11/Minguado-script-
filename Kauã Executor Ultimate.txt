local Player = game:GetService("Players").LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

-- Verificação de ambiente
if not RunService:IsClient() and not RunService:IsStudio() then
    warn("Executor só funciona no cliente!")
    return
end

-- Função para salvar o estado do executor
local function SaveExecutorState(code, position, minimized)
    local stateFolder = Instance.new("Folder")
    stateFolder.Name = "KauaExecutorState"
    
    -- Salva o código
    local codeValue = Instance.new("StringValue")
    codeValue.Name = "Code"
    codeValue.Value = code
    codeValue.Parent = stateFolder
    
    -- Salva a posição
    local positionValue = Instance.new("Vector3Value")
    positionValue.Name = "Position"
    positionValue.Value = Vector3.new(position.X.Scale, position.X.Offset, position.Y.Offset)
    positionValue.Parent = stateFolder
    
    -- Salva o estado de minimizado
    local minimizedValue = Instance.new("BoolValue")
    minimizedValue.Name = "Minimized"
    minimizedValue.Value = minimized
    minimizedValue.Parent = stateFolder
    
    -- Remove o estado anterior se existir
    local oldState = CoreGui:FindFirstChild("KauaExecutorState")
    if oldState then
        oldState:Destroy()
    end
    
    stateFolder.Parent = CoreGui
end

-- Função para carregar o estado do executor
local function LoadExecutorState()
    local stateFolder = CoreGui:FindFirstChild("KauaExecutorState")
    if not stateFolder then return nil end
    
    local code = stateFolder:FindFirstChild("Code")
    local position = stateFolder:FindFirstChild("Position")
    local minimized = stateFolder:FindFirstChild("Minimized")
    
    if code and position and minimized then
        local positionUDim = UDim2.new(
            position.Value.X, -- X Scale
            position.Value.Y, -- X Offset
            0, -- Y Scale (não salvo)
            position.Value.Z  -- Y Offset
        )
        
        return {
            code = code.Value,
            position = positionUDim,
            minimized = minimized.Value
        }
    end
    
    return nil
end

-- Remove GUIs antigas
local existingGui = Player.PlayerGui:FindFirstChild("KauaExecutorUltimate")
if existingGui then
    existingGui:Destroy()
end

-- Cria a GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "KauaExecutorUltimate"
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false -- Isso é crucial para persistência
ScreenGui.Parent = Player:WaitForChild("PlayerGui")

-- Carrega o estado salvo
local savedState = LoadExecutorState()

-- Função de pop-up
local function CreatePopup(title, text, color)
    local popup = Instance.new("Frame")
    popup.Name = "Popup"
    popup.Size = UDim2.new(0, 300, 0, 120)
    popup.Position = UDim2.new(0.5, -150, 1, 0)
    popup.BackgroundColor3 = color or Color3.fromRGB(40, 40, 40)
    popup.BorderSizePixel = 0
    popup.ZIndex = 100
    popup.AnchorPoint = Vector2.new(0.5, 0)
    popup.Parent = ScreenGui

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 14
    titleLabel.Parent = popup

    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "Text"
    textLabel.Size = UDim2.new(1, -20, 1, -40)
    textLabel.Position = UDim2.new(0, 10, 0, 35)
    textLabel.BackgroundTransparency = 1
    textLabel.Font = Enum.Font.Gotham
    textLabel.Text = text
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextSize = 12
    textLabel.TextWrapped = true
    textLabel.Parent = popup

    -- Animação
    local tweenIn = TweenService:Create(
        popup,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad),
        {Position = UDim2.new(0.5, -150, 0.8, -60)}
    )
    tweenIn:Play()

    task.delay(3, function()
        local tweenOut = TweenService:Create(
            popup,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad),
            {Position = UDim2.new(0.5, -150, 1, 0)}
        )
        tweenOut:Play()
        tweenOut.Completed:Connect(function()
            popup:Destroy()
        end)
    end)
end

-- Janela principal
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 500, 0, 400)

-- Define a posição baseada no estado salvo ou padrão
if savedState then
    MainFrame.Position = savedState.position
else
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
end

MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
MainFrame.BorderColor3 = Color3.fromRGB(50, 50, 50)
MainFrame.BorderSizePixel = 1
MainFrame.Active = true
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui

-- Título com animação RGB
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(0, 200, 0, 25)
Title.Position = UDim2.new(0, 10, 0, 5)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.GothamBold
Title.Text = "Kauã Executor ULTIMATE"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 16
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = MainFrame

local hue = 0
RunService.Heartbeat:Connect(function(deltaTime)
    hue = (hue + deltaTime * 0.5) % 1
    Title.TextColor3 = Color3.fromHSV(hue, 0.8, 1)
end)

-- Botão de fechar
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 25, 0, 25)
CloseButton.Position = UDim2.new(1, -30, 0, 5)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
CloseButton.BorderSizePixel = 0
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 14
CloseButton.Parent = MainFrame

-- Botão de minimizar/restaurar
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Position = UDim2.new(1, -60, 0, 5)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Text = "_"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 14
MinimizeButton.Parent = MainFrame

local isMinimized = false
local originalSize = MainFrame.Size
local minimizedSize = UDim2.new(0, 500, 0, 35)
local elementsToHide = {}

-- Função para minimizar/restaurar
local function ToggleMinimize()
    isMinimized = not isMinimized
    
    if isMinimized then
        -- Esconde todos os elementos exceto título e botões
        for _, child in pairs(MainFrame:GetChildren()) do
            if child ~= Title and child ~= CloseButton and child ~= MinimizeButton then
                child.Visible = false
                table.insert(elementsToHide, child)
            end
        end
        MainFrame.Size = minimizedSize
        MinimizeButton.Text = "+"
    else
        -- Mostra todos os elementos
        for _, child in pairs(elementsToHide) do
            child.Visible = true
        end
        elementsToHide = {}
        MainFrame.Size = originalSize
        MinimizeButton.Text = "_"
    end
    
    -- Salva o estado
    SaveExecutorState(CodeTextBox.Text, MainFrame.Position, isMinimized)
end

MinimizeButton.MouseButton1Click:Connect(ToggleMinimize)

-- Editor de código profissional
local CodeEditorScrollingFrame = Instance.new("ScrollingFrame")
CodeEditorScrollingFrame.Name = "CodeEditorScrollingFrame"
CodeEditorScrollingFrame.Size = UDim2.new(1, -20, 1, -120)
CodeEditorScrollingFrame.Position = UDim2.new(0, 10, 0, 35)
CodeEditorScrollingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
CodeEditorScrollingFrame.BorderSizePixel = 0
CodeEditorScrollingFrame.ScrollBarThickness = 8
CodeEditorScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
CodeEditorScrollingFrame.Parent = MainFrame

-- Números de linha
local LineNumbers = Instance.new("TextLabel")
LineNumbers.Name = "LineNumbers"
LineNumbers.Size = UDim2.new(0, 40, 1, 0)
LineNumbers.Position = UDim2.new(0, 0, 0, 0)
LineNumbers.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
LineNumbers.BorderSizePixel = 0
LineNumbers.Font = Enum.Font.Code
LineNumbers.Text = "1"
LineNumbers.TextColor3 = Color3.fromRGB(120, 120, 120)
LineNumbers.TextSize = 14
LineNumbers.TextXAlignment = Enum.TextXAlignment.Right
LineNumbers.TextYAlignment = Enum.TextYAlignment.Top
LineNumbers.AutomaticSize = Enum.AutomaticSize.Y
LineNumbers.Parent = CodeEditorScrollingFrame

-- Área de código
local CodeTextBox = Instance.new("TextBox")
CodeTextBox.Name = "CodeTextBox"
CodeTextBox.Size = UDim2.new(1, -45, 1, 0)
CodeTextBox.Position = UDim2.new(0, 45, 0, 0)
CodeTextBox.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
CodeTextBox.BorderSizePixel = 0
CodeTextBox.Font = Enum.Font.Code

-- Carrega o código salvo ou usa o padrão
if savedState and savedState.code then
    CodeTextBox.Text = savedState.code
else
    CodeTextBox.Text = '-- Digite seu código aqui\nprint("Olá mundo!")\n\n-- Atalho: =expressão\n=2+2\n\n-- Loadstring local\nlocal code = [[\n    for i = 1, 5 do\n        print("Linha "..i)\n    end\n]]\nloadstring(code)()'
end

CodeTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
CodeTextBox.TextSize = 14
CodeTextBox.TextXAlignment = Enum.TextXAlignment.Left
CodeTextBox.TextYAlignment = Enum.TextYAlignment.Top
CodeTextBox.MultiLine = true
CodeTextBox.TextWrapped = false
CodeTextBox.ClearTextOnFocus = false
CodeTextBox.AutomaticSize = Enum.AutomaticSize.Y
CodeTextBox.Parent = CodeEditorScrollingFrame

-- Atualizar números de linha
local function UpdateLineNumbers()
    local lineCount = 1
    for _ in string.gmatch(CodeTextBox.Text, "\n") do
        lineCount = lineCount + 1
    end
    
    local numbers = ""
    for i = 1, lineCount do
        numbers = numbers .. i .. "\n"
    end
    
    LineNumbers.Text = numbers
    CodeEditorScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, CodeTextBox.TextBounds.Y)
end

CodeTextBox:GetPropertyChangedSignal("Text"):Connect(UpdateLineNumbers)
UpdateLineNumbers()

-- Botões de controle
local ExecuteButton = Instance.new("TextButton")
ExecuteButton.Name = "ExecuteButton"
ExecuteButton.Size = UDim2.new(0, 120, 0, 35)
ExecuteButton.Position = UDim2.new(1, -130, 1, -45)
ExecuteButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
ExecuteButton.BorderSizePixel = 0
ExecuteButton.Font = Enum.Font.GothamBold
ExecuteButton.Text = "EXECUTAR (F9)"
ExecuteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ExecuteButton.TextSize = 14
ExecuteButton.Parent = MainFrame

local ClearButton = Instance.new("TextButton")
ClearButton.Name = "ClearButton"
ClearButton.Size = UDim2.new(0, 120, 0, 35)
ClearButton.Position = UDim2.new(0, 10, 1, -45)
ClearButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
ClearButton.BorderSizePixel = 0
ClearButton.Font = Enum.Font.GothamBold
ClearButton.Text = "LIMPAR"
ClearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ClearButton.TextSize = 14
ClearButton.Parent = MainFrame

ClearButton.MouseButton1Click:Connect(function()
    CodeTextBox.Text = ""
    UpdateLineNumbers()
    SaveExecutorState(CodeTextBox.Text, MainFrame.Position, isMinimized)
end)

-- Função loadstring que funciona SEM HTTP
local function CustomLoadString(code)
    -- Primeiro tenta o loadstring normal
    local fn, err = loadstring(code)
    if fn then return fn end
    
    -- Se falhar, tenta métodos alternativos
    local success, result = pcall(function()
        -- Método 1: Usando load diretamente
        local chunk, loadErr = load(code)
        if chunk then return chunk end
        
        -- Método 2: Usando uma função anônima
        local anonymousFn = assert(load("return function()\n"..code.."\nend"))()
        return anonymousFn
    end)
    
    if success and result then
        return result
    else
        return nil, "Erro ao carregar: "..tostring(result or err)
    end
end

-- Ambiente de execução completo
local function CreateExecutionEnvironment()
    local env = {}
    
    -- Copia funções globais seguras
    for name, func in pairs(getfenv()) do
        if not name:find("^coroutine") and not name:find("^debug") then
            env[name] = func
        end
    end
    
    -- Objetos do Roblox
    env.game = game
    env.workspace = workspace
    env.script = script
    
    -- Loadstring customizado
    env.loadstring = CustomLoadString
    
    -- Funções úteis
    env.print = function(...)
        local args = {...}
        local output = ""
        for i, v in ipairs(args) do
            output = output .. (i > 1 and "\t" or "") .. tostring(v)
        end
        CreatePopup("PRINT", output, Color3.fromRGB(0, 150, 200))
    end
    
    -- Atalhos
    env.p = env.print
    
    return env
end

-- Função de execução principal
local function ExecuteCode()
    local code = CodeTextBox.Text
    
    -- Transforma atalho "=" em print
    if string.sub(code, 1, 1) == "=" then
        code = "print(" .. string.sub(code, 2) .. ")"
    end
    
    -- Cria ambiente seguro
    local env = CreateExecutionEnvironment()
    
    -- Executa o código
    local success, result = xpcall(function()
        local fn, err = CustomLoadString(code)
        if not fn then error(err or "Erro desconhecido ao compilar") end
        
        setfenv(fn, env)
        local results = {fn()}
        
        if #results > 0 then
            local output = ""
            for i, v in ipairs(results) do
                output = output .. (i > 1 and ", " or "") .. tostring(v)
            end
            return output
        end
        return "Executado com sucesso!"
    end, function(err)
        return tostring(err):gsub("^.+:%d+: ", "")
    end)
    
    -- Mostra resultado
    if success then
        CreatePopup("✅ SUCESSO", result, Color3.fromRGB(0, 200, 0))
    else
        CreatePopup("❌ ERRO", result, Color3.fromRGB(200, 0, 0))
    end
    
    -- Salva o estado após execução
    SaveExecutorState(CodeTextBox.Text, MainFrame.Position, isMinimized)
end

ExecuteButton.MouseButton1Click:Connect(ExecuteCode)

-- Atalhos de teclado
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    -- F9 para executar
    if input.KeyCode == Enum.KeyCode.F9 then
        ExecuteCode()
    end
    
    -- Ctrl+Enter para executar
    if input.KeyCode == Enum.KeyCode.Return and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
        ExecuteCode()
    end
end)

-- Sistema de arrastar
local dragging = false
local dragStartPos
local startFramePos

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStartPos = input.Position
        startFramePos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
                SaveExecutorState(CodeTextBox.Text, MainFrame.Position, isMinimized)
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStartPos
        MainFrame.Position = UDim2.new(
            startFramePos.X.Scale, 
            startFramePos.X.Offset + delta.X,
            startFramePos.Y.Scale, 
            startFramePos.Y.Offset + delta.Y
        )
    end
end)

-- Fecha o executor e salva o estado
CloseButton.MouseButton1Click:Connect(function()
    SaveExecutorState(CodeTextBox.Text, MainFrame.Position, isMinimized)
    ScreenGui:Destroy()
end)

-- Focar no editor
task.defer(function()
    CodeTextBox:CaptureFocus()
end)

-- Restaura o estado minimizado se necessário
if savedState and savedState.minimized then
    task.spawn(function()
        wait(0.1) -- Pequeno delay para garantir que tudo está carregado
        if not isMinimized then
            ToggleMinimize()
        end
    end)
end

CreatePopup("Kauã Executor ULTIMATE", "Pronto para uso! 😼\nF9 ou Ctrl+Enter para executar", Color3.fromRGB(0, 100, 200))